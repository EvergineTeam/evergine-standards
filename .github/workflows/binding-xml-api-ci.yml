name: Binding XML API CI (Reusable)

description: >
  Reusable workflow for bindings that require downloading and processing XML API definitions (e.g., Vulkan, OpenXR).

on:
  workflow_call:
    inputs:
      xml_url:
        description: 'URL to download the XML definition file (e.g., vk.xml, xr.xml)'
        required: true
        type: string
      xml_path:
        description: 'Local path to store the XML file (e.g., vk.xml, xr.xml)'
        required: true
        type: string
      xml_tmp_path:
        description: 'Temporary path for downloaded XML (e.g., vk.xml_tmp, xr.xml_tmp)'
        required: true
        type: string
      generator-project:
        description: 'Path to the generator .csproj file'
        required: true
        type: string
      generator-name:
        description: 'Name of the generator/binding'
        required: true
        type: string
      target-framework:
        description: 'Target framework for the binding'
        required: false
        type: string
        default: 'net8.0'
      runtime-identifier:
        description: 'Runtime identifier (optional, for platform-specific bindings)'
        required: false
        type: string
        default: 'win-x64'
      build-verbosity:
        description: 'dotnet verbosity level'
        required: false
        type: string
        default: 'normal'
      build-configuration:
        description: 'Build configuration (Release, Debug, etc.)'
        required: false
        type: string
        default: 'Release'
      main-branch:
        description: 'Main branch name (master/main)'
        required: false
        type: string
        default: 'main'

jobs:
  update_and_generate:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download latest XML definition
        uses: carlosperate/download-file-action@v1.0.3
        with:
          file-url: ${{ inputs.xml_url }}
          file-name: ${{ inputs.xml_tmp_path }}

      - name: Compare XML hashes
        id: compare_hashes
        shell: pwsh
        run: |
          $hash_current = if (Test-Path '${{ inputs.xml_path }}') { Get-FileHash '${{ inputs.xml_path }}' -Algorithm SHA256 | Select-Object -ExpandProperty Hash } else { '' }
          $hash_new = Get-FileHash '${{ inputs.xml_tmp_path }}' -Algorithm SHA256 | Select-Object -ExpandProperty Hash
          echo "hash_current=$hash_current" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "hash_new=$hash_new" | Out-File -FilePath $env:GITHUB_ENV -Append
          Write-Host "Current hash: $hash_current"
          Write-Host "New hash: $hash_new"

      - name: Update XML if changed
        if: env.hash_current != env.hash_new
        shell: pwsh
        run: |
          Move-Item -Force '${{ inputs.xml_tmp_path }}' '${{ inputs.xml_path }}'
          Write-Host "XML updated."

      - name: Generate bindings
        if: env.hash_current != env.hash_new
        uses: EvergineTeam/evergine-standards/.github/actions/binding-generate-bindings-dotnet@main
        with:
          generator-project: ${{ inputs.generator-project }}
          generator-name: ${{ inputs.generator-name }}
          target-framework: ${{ inputs.target-framework }}
          runtime-identifier: ${{ inputs.runtime-identifier }}
          build-verbosity: ${{ inputs.build-verbosity }}
          build-configuration: ${{ inputs.build-configuration }}

      - name: Commit and push changes
        if: env.hash_current != env.hash_new
        shell: pwsh
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add '${{ inputs.xml_path }}'
          git add .
          git commit -m "Update XML and regenerate bindings"
          git push origin ${{ inputs.main-branch }}

      - name: Cleanup temp XML
        if: always()
        shell: pwsh
        run: |
          Remove-Item -Force '${{ inputs.xml_tmp_path }}'

      - name: No changes detected
        if: env.hash_current == env.hash_new
        run: echo "No XML changes detected. Skipping binding generation."
